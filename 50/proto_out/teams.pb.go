// Code generated by protoc-gen-go. DO NOT EDIT.
// source: teams.proto

package proto_out

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Team struct {
	Name                 *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Teammates            []*Person `protobuf:"bytes,2,rep,name=teammates" json:"teammates,omitempty"`
	City                 *Point    `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_f63f4a1b2b4dddb4, []int{0}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Team) GetTeammates() []*Person {
	if m != nil {
		return m.Teammates
	}
	return nil
}

func (m *Team) GetCity() *Point {
	if m != nil {
		return m.City
	}
	return nil
}

type Teams struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Teams) Reset()         { *m = Teams{} }
func (m *Teams) String() string { return proto.CompactTextString(m) }
func (*Teams) ProtoMessage()    {}
func (*Teams) Descriptor() ([]byte, []int) {
	return fileDescriptor_f63f4a1b2b4dddb4, []int{1}
}

func (m *Teams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Teams.Unmarshal(m, b)
}
func (m *Teams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Teams.Marshal(b, m, deterministic)
}
func (m *Teams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Teams.Merge(m, src)
}
func (m *Teams) XXX_Size() int {
	return xxx_messageInfo_Teams.Size(m)
}
func (m *Teams) XXX_DiscardUnknown() {
	xxx_messageInfo_Teams.DiscardUnknown(m)
}

var xxx_messageInfo_Teams proto.InternalMessageInfo

func (m *Teams) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

func init() {
	proto.RegisterType((*Team)(nil), "Team")
	proto.RegisterType((*Teams)(nil), "Teams")
}

func init() {
	proto.RegisterFile("teams.proto", fileDescriptor_f63f4a1b2b4dddb4)
}

var fileDescriptor_f63f4a1b2b4dddb4 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x49, 0x4d, 0xcc,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x29, 0x48, 0x2d, 0x2a, 0xce, 0xcf, 0x83,
	0xf3, 0xf2, 0x33, 0xf3, 0x4a, 0xa0, 0x72, 0x4a, 0xb1, 0x5c, 0x2c, 0x21, 0xa9, 0x89, 0xb9, 0x42,
	0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x4c, 0x1a, 0x9c, 0x41, 0x60, 0xb6,
	0x90, 0x2a, 0x17, 0x27, 0xc8, 0x98, 0xdc, 0xc4, 0x92, 0xd4, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d,
	0x6e, 0x23, 0x76, 0xbd, 0x00, 0xb0, 0x59, 0x41, 0x08, 0x19, 0x21, 0x29, 0x2e, 0x96, 0xe4, 0xcc,
	0x92, 0x4a, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x36, 0xbd, 0x00, 0x90, 0xf9, 0x41, 0x60,
	0x31, 0x25, 0x15, 0x2e, 0x56, 0x90, 0xf1, 0xc5, 0x42, 0xd2, 0x5c, 0xac, 0x60, 0x27, 0x49, 0x30,
	0x82, 0xcd, 0x61, 0xd5, 0x03, 0x09, 0x07, 0x41, 0xc4, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff,
	0xa9, 0xb1, 0x4c, 0xae, 0x00, 0x00, 0x00,
}
